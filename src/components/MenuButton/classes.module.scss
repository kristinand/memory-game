/* https://codepen.io/kathykato/pen/gOOjgmP */
@import 'styles';

.link {
  width: 100%;
}

.button {
  margin: 0.3em 0;
  padding: 1em 2em;
  width: 100%;
  position: relative;
  display: inline-block;
  vertical-align: middle;
  border-radius: 0.3em;
  transform-style: preserve-3d;
  transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), background-color 150ms cubic-bezier(0, 0, 0.58, 1);

  &::before {
    position: absolute;
    content: '';
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    transform: translate3d(0, 0.75em, -1em);
    transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);
  }

  &:hover {
    transform: translate(0, 0.25em);

    &::before {
      transform: translate3d(0, 0.5em, -1em);
    }
  }

  &.light {
    background-color: $menuButtonBgColorLight;

    &::before {
      background-color: $menuButtonHoverBgColorLight;
      box-shadow: 0 0.5em 0.5em 0 $boxShadowLight;
    }

    &:hover::before {
      box-shadow: 0 0.35em 0.2em 0 $boxShadowLight;
    }
  }

  &.dark {
    background-color: $menuButtonBgColorDark;

    &::before {
      background-color: $menuButtonHoverBgColorDark;
      box-shadow: 0 0.5em 0.5em 0 $boxShadowDark;
    }

    &:hover::before {
      box-shadow: 0 0.35em 0.2em 0 $boxShadowDark;
    }
  }

  &:active {
    transform: translate(0em, 0.75em);

    &::before {
      box-shadow: 0 0 0 0 hsla(0, 0%, 30%, 0.3) !important;
      transform: translate3d(0, 0, -1em);
    }
  }

  &:disabled {
    cursor: not-allowed;
  }
}
